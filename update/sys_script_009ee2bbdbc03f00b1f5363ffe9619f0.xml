<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_yttvt_expense_items</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_yttvt_expense_items">u_reimbursableVALCHANGES^ORu_total_amountVALCHANGES^ORu_vatVALCHANGES^EQ<item endquery="false" field="u_reimbursable" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="u_total_amount" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="false" field="u_vat" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Update Expense FromItems</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	
	var gr = new GlideRecord ('x_yttvt_expense_items');
	gr.addQuery('u_expense',current.u_expense);
	gr.query();
	var toplam = 0;
	var vattoplam = 0;
	var reim = 0;
	while (gr.next()){
		
		toplam += gr.u_total_amount;
		vattoplam += gr.u_total_amount*(1 - gr.u_vat/100);
		gs.addInfoMessage(vattoplam);
		if (gr.u_reimbursable == true){
		reim += gr.u_total_amount;
		}
		 var parentGr = current.u_expense.getRefRecord();
		parentGr.u_total_amount = toplam;
		parentGr.u_vat_amount = vattoplam;
	    parentGr.u_reimburse_amount = reim;
		parentGr.update();
		
		
	}
	

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-03-14 19:20:07</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>009ee2bbdbc03f00b1f5363ffe9619f0</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>Update Expense FromItems</sys_name>
        <sys_overrides/>
        <sys_package display_value="Expense Management" source="x_yttvt_expense">bcbf9affdb403f00b1f5363ffe961970</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Expense Management">bcbf9affdb403f00b1f5363ffe961970</sys_scope>
        <sys_update_name>sys_script_009ee2bbdbc03f00b1f5363ffe9619f0</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-03-14 19:38:32</sys_updated_on>
        <template/>
        <when>async</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=009ee2bbdbc03f00b1f5363ffe9619f0"/>
</record_update>
